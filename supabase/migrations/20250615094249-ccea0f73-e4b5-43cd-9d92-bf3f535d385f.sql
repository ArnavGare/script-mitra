
-- 1. Create the products table
CREATE TABLE public.products (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  title TEXT NOT NULL,
  description TEXT,
  file_name TEXT,
  file_path TEXT,
  file_type TEXT,
  tag TEXT,
  category TEXT,
  icon TEXT,
  popular BOOLEAN DEFAULT false,
  created_at TIMESTAMPTZ NOT NULL DEFAULT now()
);

-- Enable RLS
ALTER TABLE public.products ENABLE ROW LEVEL SECURITY;

-- Let everyone select products (publicly readable)
CREATE POLICY "Allow read products" ON public.products
  FOR SELECT USING (true);

-- Allow authenticated users to insert/update/delete (for admins, can add further granularity later)
CREATE POLICY "Allow authenticated insert" ON public.products
  FOR INSERT
  TO authenticated
  WITH CHECK (auth.role() = 'authenticated');

CREATE POLICY "Allow authenticated update" ON public.products
  FOR UPDATE
  TO authenticated
  USING (auth.role() = 'authenticated');

CREATE POLICY "Allow authenticated delete" ON public.products
  FOR DELETE
  TO authenticated
  USING (auth.role() = 'authenticated');

-- 2. Create the downloads table to log each download
CREATE TABLE public.product_downloads (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  product_id uuid REFERENCES public.products(id),
  user_id uuid,
  downloaded_at timestamptz NOT NULL DEFAULT now()
);

-- RLS: allow anyone to insert (so downloads can be tracked)
ALTER TABLE public.product_downloads ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Allow anyone insert" ON public.product_downloads
  FOR INSERT
  WITH CHECK (true);

-- Allow only authenticated select (future admin logic)
CREATE POLICY "Authenticated select" ON public.product_downloads
  FOR SELECT
  TO authenticated
  USING (false);

-- 3. Create storage bucket for product files (if not exists)
insert into storage.buckets (id, name, public) values ('product_files', 'product_files', true)
on conflict (id) do nothing;

-- 4. Storage policies: allow upload only by authenticated users, download by all
-- Allow upload by authenticated users only
create policy "Authenticated can upload product files" 
  on storage.objects for insert
  with check (auth.role() = 'authenticated' and bucket_id = 'product_files');

-- Allow download by anyone
create policy "Anyone can download product files"
  on storage.objects for select
  using (bucket_id = 'product_files');
